{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECC\\\\Documents\\\\GitHub\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { marked } from 'marked';\nimport { useLocalstorage } from './custom/UseLocalstorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useState('## Hello');\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\n  const [hide, hidePreview] = useState(true);\n  const {\n    setItem,\n    getItem\n  } = useLocalstorage(\"\");\n\n  const openMD = () => {\n    console.log(0);\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    console.log(0);\n    hidePreview(false);\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), hide ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"+SNHoogPUvgqGksVMy3KzgIPJd8=\", false, function () {\n  return [useLocalstorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ECC/Documents/GitHub/markdown-previewer/src/App.js"],"names":["React","useState","marked","useLocalstorage","App","code","setCode","compiled","setCompiled","hide","hidePreview","setItem","getItem","openMD","console","log","openPreview","handleChange","e","target","value","parse"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,SAASC,eAAT,QAAgC,0BAAhC;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,UAAD,CAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,2BAAD,CAAxC;AACA,QAAM,CAACQ,IAAD,EAAOC,WAAP,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACF,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBT,eAAe,CAAC,EAAD,CAA3C;;AACE,QAAMU,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,QAAMM,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BZ,IAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAZ,IAAAA,WAAW,CAACN,MAAM,CAACmB,KAAP,CAAaH,CAAC,CAACC,MAAF,CAASC,KAAtB,CAAD,CAAX;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEP,MAAjB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMEP,IAAI,gBACF;AAAA,+BACE;AAAU,UAAA,QAAQ,EAAEQ,YAApB;AAAkC,UAAA,KAAK,EAAEZ;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADE,gBAIF;AAAA,+BACE;AAAU,UAAA,KAAK,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAoBD,CAxCD;;GAAMH,G;UAIsBD,e;;;KAJtBC,G;AA2CN,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport React, {useState} from 'react';\r\nimport {marked} from 'marked'\r\nimport { useLocalstorage } from './custom/UseLocalstorage';\r\nconst App = () => {\r\n  const [code, setCode] = useState('## Hello')\r\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>')\r\n  const [hide, hidePreview] = useState(true)\r\nconst { setItem ,getItem}  =useLocalstorage(\"\")\r\n  const openMD = () => {\r\n    console.log(0)\r\n    hidePreview(true)\r\n  }\r\n\r\n  const openPreview = () => {\r\n    console.log(0)\r\n    hidePreview(false)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value)\r\n    setCompiled(marked.parse(e.target.value))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">MarkDown</button>\r\n          <button onClick={openPreview}>Preview</button>\r\n        </div>\r\n        {\r\n        hide ? \r\n          <div>\r\n            <textarea onChange={handleChange} value={code}/>\r\n          </div> : \r\n          <div>\r\n            <textarea value={compiled}/>\r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}