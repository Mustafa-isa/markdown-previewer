{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECC\\\\Documents\\\\GitHub\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { marked } from \"marked\";\nimport { useLocalstorage } from \"./custom/UseLocalstorage\";\nimport axios from \"axios\";\nimport { ClipLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    setItem,\n    getItem\n  } = useLocalstorage();\n  const [code, setCode] = useState(getItem() ? getItem() : \"## hello\");\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\n  const [docsData, setDocsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const storedValue = localStorage.getItem(\"value\");\n\n    if (storedValue) {\n      setCompiled(marked.parse(storedValue));\n    } else {\n      console.log(\"Value does not exist in localStorage\");\n    }\n  }, []);\n  const [hide, setHide] = useState({\n    markedown: true,\n    preview: false,\n    docs: false\n  });\n\n  const openMD = () => {\n    console.log(0);\n    setHide({\n      markedown: true,\n      preview: false,\n      docs: false\n    });\n  };\n\n  const openPreview = () => {\n    console.log(0);\n    setHide({\n      markedown: false,\n      preview: true,\n      docs: false\n    });\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setItem(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n  };\n\n  const openDocs = () => {\n    setHide({\n      markedown: false,\n      preview: false,\n      docs: true\n    });\n\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://www.markdownguide.org/api/v1/basic-syntax.jsonhttps://www.markdownguide.org/api/v1/basic-syntax.json\");\n        console.log(response.data);\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      } finally {\n        setTimeout(() => {\n          setLoading(true);\n        }, 3000);\n      }\n    };\n\n    fetchData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openDocs,\n          children: \"docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), hide.markedown ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : hide.preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : hide.docs ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"docs\",\n        children: loading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#7f8f8c\",\n          size: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dataContaienr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"csae2S7pVwAw6RTnPB9Nz5m3/nE=\", false, function () {\n  return [useLocalstorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ECC/Documents/GitHub/markdown-previewer/src/App.js"],"names":["React","useState","useEffect","marked","useLocalstorage","axios","ClipLoader","App","setItem","getItem","code","setCode","compiled","setCompiled","docsData","setDocsData","loading","setLoading","storedValue","localStorage","parse","console","log","hide","setHide","markedown","preview","docs","openMD","openPreview","handleChange","e","target","value","openDocs","fetchData","response","get","data","error","setTimeout"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { marked } from \"marked\";\r\nimport { useLocalstorage } from \"./custom/UseLocalstorage\";\r\nimport axios from \"axios\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nconst App = () => {\r\n  const { setItem, getItem } = useLocalstorage();\r\n\r\n  const [code, setCode] = useState(getItem() ? getItem() : \"## hello\");\r\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\r\n  const [docsData, setDocsData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const storedValue = localStorage.getItem(\"value\");\r\n    if (storedValue) {\r\n      setCompiled(marked.parse(storedValue));\r\n    } else {\r\n      console.log(\"Value does not exist in localStorage\");\r\n    }\r\n  }, []);\r\n  const [hide, setHide] = useState({\r\n    markedown: true,\r\n    preview: false,\r\n    docs: false\r\n  });\r\n  const openMD = () => {\r\n    console.log(0);\r\n    setHide({\r\n      markedown: true,\r\n      preview: false,\r\n      docs: false\r\n    });\r\n  };\r\n\r\n  const openPreview = () => {\r\n    console.log(0);\r\n    setHide({\r\n      markedown: false,\r\n      preview: true,\r\n      docs: false\r\n    });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setCode(e.target.value);\r\n    setItem(e.target.value);\r\n\r\n    setCompiled(marked.parse(e.target.value));\r\n  };\r\n  const openDocs = () => {\r\n    setHide({\r\n      markedown: false,\r\n      preview: false,\r\n      docs: true\r\n    });\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const response = await axios.get(\r\n          \"https://www.markdownguide.org/api/v1/basic-syntax.jsonhttps://www.markdownguide.org/api/v1/basic-syntax.json\"\r\n        );\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.log(\"Error fetching data:\", error);\r\n      } finally{\r\n  setTimeout(()=>{\r\n    setLoading(true)\r\n\r\n  } ,3000)\r\n\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">\r\n            MarkDown\r\n          </button>\r\n          <button onClick={openPreview}>Preview</button>\r\n          <button onClick={openDocs}>docs</button>\r\n        </div>\r\n        {hide.markedown ? (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        ) : hide.preview ? (\r\n          <div>\r\n            <textarea value={compiled} />\r\n          </div>\r\n        ) : hide.docs ? (\r\n          <div className=\"docs\">\r\n            {loading ? <ClipLoader\r\n  color=\"#7f8f8c\"\r\n  size={200}\r\n/>: <div className=\"dataContaienr\"></div>}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}